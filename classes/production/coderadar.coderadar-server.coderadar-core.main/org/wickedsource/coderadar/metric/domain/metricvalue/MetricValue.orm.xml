<?xml version="1.0" encoding="UTF-8"?>
<entity-mappings version="2.0"
                 xmlns="http://java.sun.com/xml/ns/persistence/orm"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://java.sun.com/xml/ns/persistence/orm  http://java.sun.com/xml/ns/persistence/orm_2_0.xsd">

    <named-query name="MetricValue.findValuesAggregatedByCommitAndMetric">
        <query><![CDATA[
            SELECT NEW org.wickedsource.coderadar.metric.domain.metricvalue.MetricValueDTO (mv.id.metricName, sum(mv.value))
            FROM MetricValue mv
            WHERE mv.id.commit.project.id = :projectId
              AND mv.id.file.id NOT IN
                (SELECT ctf2.id.file.id FROM CommitToFileAssociation ctf2
                 WHERE ctf2.changeType = 'DELETE'
                 AND ctf2.id.commit.sequenceNumber<=:commitSequenceNumber)
              AND mv.id.metricName IN (:metricNames)
              AND mv.id.commit.sequenceNumber =
                (SELECT max(m2.id.commit.sequenceNumber)
                 FROM MetricValue m2
                 WHERE m2.id.commit.sequenceNumber<=:commitSequenceNumber
                   AND m2.id.file.identity.id = mv.id.file.identity.id
                   AND m2.id.metricName = mv.id.metricName)
            GROUP BY mv.id.metricName
            ]]>
        </query>
    </named-query>

    <named-query name="MetricValue.findValuesAggregatedByCommitAndProfile">
        <query><![CDATA[
            SELECT NEW org.wickedsource.coderadar.metric.domain.metricvalue.ProfileValuePerCommitDTO (qpm.profile.name, qpm.metricType, sum(mv.value))
            FROM QualityProfileMetric qpm,
                 MetricValue mv
            WHERE qpm.name = mv.id.metricName
              AND mv.id.file.id NOT IN
                (SELECT ctf2.id.file.id FROM CommitToFileAssociation ctf2
                 WHERE ctf2.changeType = 'DELETE'
                 AND ctf2.id.commit.sequenceNumber<=:commitSequenceNumber)
              AND qpm.profile.project.id = :projectId
              AND qpm.profile.name IN (:profileNames)
              AND mv.id.commit.sequenceNumber =
                (SELECT max(m2.id.commit.sequenceNumber)
                 FROM MetricValue m2
                 WHERE m2.id.commit.sequenceNumber<=:commitSequenceNumber
                   AND m2.id.file.identity.id = mv.id.file.identity.id
                   AND m2.id.metricName = mv.id.metricName)
            GROUP BY qpm.profile.id,
                     qpm.metricType
            ]]>
        </query>
    </named-query>

    <named-query name="MetricValue.findValuesAggregatedByModule">
        <query><![CDATA[
            SELECT NEW org.wickedsource.coderadar.metric.domain.metricvalue.GroupedByModuleMetricValueDTO(mv.id.metricName, sum(mv.value), m.path)
            FROM MetricValue mv, CommitToFileAssociation ctf
            JOIN ctf.modules m
            WHERE mv.id.file.id = ctf.id.file.id
              AND mv.id.file.id NOT IN
                (SELECT ctf2.id.file.id FROM CommitToFileAssociation ctf2
                 WHERE ctf2.changeType = 'DELETE'
                 AND ctf2.id.commit.sequenceNumber<=:commitSequenceNumber)
              AND mv.id.commit.project.id = :projectId
              AND mv.id.metricName IN (:metricNames)
              AND ctf.id.commit.sequenceNumber = mv.id.commit.sequenceNumber
              AND mv.id.commit.sequenceNumber =
                (SELECT max(m2.id.commit.sequenceNumber)
                 FROM MetricValue m2
                 WHERE m2.id.commit.sequenceNumber<=:commitSequenceNumber
                   AND m2.id.file.identity.id = mv.id.file.identity.id
                   AND m2.id.metricName = mv.id.metricName)
            GROUP BY mv.id.metricName, m.path
            ]]>
        </query>
    </named-query>

    <named-query name="MetricValue.findValuesAggregatedByFile">
        <query><![CDATA[
            SELECT NEW org.wickedsource.coderadar.metric.domain.metricvalue.GroupedByFileMetricValueDTO(mv.id.metricName, sum(mv.value), mv.id.file.filepath)
            FROM MetricValue mv, CommitToFileAssociation ctf
            WHERE mv.id.file.id = ctf.id.file.id
              AND mv.id.file.id NOT IN
                (SELECT ctf2.id.file.id FROM CommitToFileAssociation ctf2
                 WHERE ctf2.changeType = 'DELETE'
                 AND ctf2.id.commit.sequenceNumber<=:commitSequenceNumber)
              AND mv.id.commit.project.id = :projectId
              AND mv.id.metricName IN (:metricNames)
              AND ctf.id.commit.sequenceNumber = mv.id.commit.sequenceNumber
              AND mv.id.commit.sequenceNumber =
                (SELECT max(m2.id.commit.sequenceNumber)
                 FROM MetricValue m2
                 WHERE m2.id.commit.sequenceNumber<=:commitSequenceNumber
                   AND m2.id.file.identity.id = mv.id.file.identity.id
                   AND m2.id.metricName = mv.id.metricName)
            GROUP BY mv.id.metricName, mv.id.file.filepath
            ]]>
        </query>
    </named-query>

    <named-query name="MetricValue.findChangedFilesBetweenTwoCommits">
        <query><![CDATA[
            SELECT DISTINCT new org.wickedsource.coderadar.metric.domain.metricvalue.ChangedFileDTO(l.oldFilepath, l.filepath, l.changeType)
            FROM GitLogEntry l
            JOIN l.commit c
            WHERE l.project.id = :projectId
            AND c.sequenceNumber BETWEEN :commit1SequenceNumber AND :commit2SequenceNumber
            ]]>
        </query>
    </named-query>

</entity-mappings>